ARG image_base="ubuntu"
ARG image_tag="bionic"
ARG dashboard_branch="master"
ARG iteration="0"
ARG dashboard_repo="https://github.com/apache/apisix-dashboard.git"

FROM ${image_base}:${image_tag}

RUN set -x \
    && apt-get update \
    && apt-get -y install wget curl git gcc make \
    && curl -sL https://deb.nodesource.com/setup_10.x | bash - \
    && apt-get install -y nodejs
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update \
    && apt-get install yarn \
    && wget https://dl.google.com/go/go1.15.2.linux-amd64.tar.gz \
    && tar -xzf go1.15.2.linux-amd64.tar.gz
    && mv go /usr/local

ARG dashboard_branch
ARG iteration
ARG dashboard_repo
RUN set -x \
    && mkdir -p /tmp/build/output/apisix/dashboard/usr/bin/ \
    && mkdir -p /tmp/build/output/apisix/dashboard/usr/local/apisix/dashboard/ \
    && export GO111MODULE=on \
    && export GOROOT=/usr/local/go \
    && export GOPATH=$HOME/gopath \
    && export PATH=$PATH:$GOROOT/bin:$GOPATH/bin \
    && cd $HOME \
    && mkdir gopath \
    && go env -w GOPROXY=https://goproxy.cn,direct \
    && cd /tmp/ \
    && git clone -b "v"${dashboard_branch} ${dashboard_repo} \
    && cd apisix-dashboard \
    && make build \
    && cp -r output/* /tmp/build/output/apisix/dashboard/usr/local/apisix/dashboard \
    && ln -s /usr/local/apisix/dashboard/manager-api /tmp/build/output/apisix/dashboard/usr/bin/manager-api
