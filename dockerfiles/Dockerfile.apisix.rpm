ARG image_base="centos"
ARG image_tag="7"
ARG checkout_v="2.2"
ARG iteration="0"
ARG apisix_repo="https://github.com/apache/apisix"

FROM ${image_base}:${image_tag}

RUN set -x \
    # install dependency
    && yum -y install wget tar gcc automake autoconf libtool make curl git which unzip \
    && wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    && rpm -ivh epel-release-latest-7.noarch.rpm \
    && yum install -y yum-utils readline-dev readline-devel \
    # install lua5.1 for compatible with openresty 1.17.8.2
    && wget http://www.lua.org/ftp/lua-5.1.4.tar.gz \
    && tar -zxvf lua-5.1.4.tar.gz \
    && cd lua-5.1.4/ \
    && make linux \
    && make install \
    # install openresty and openssl111
    && yum-config-manager --add-repo https://openresty.org/package/centos/openresty.repo \
    && yum install -y openresty openresty-openssl111-devel \
    # install luarocks
    && wget https://github.com/luarocks/luarocks/archive/v3.4.0.tar.gz \
    && tar -xf v3.4.0.tar.gz \
    && cd luarocks-3.4.0 || exit \
    && ./configure --with-lua=/usr/local --with-lua-include=/usr/local/include > build.log 2>&1 || (cat build.log && exit 1) \
    && make build > build.log 2>&1 || (cat build.log && exit 1) \
    && make install > build.log 2>&1 || (cat build.log && exit 1) \
    && cd .. || exit \
    && rm -rf luarocks-3.4.0 \
    && mkdir ~/.luarocks || true \
    && luarocks config variables.OPENSSL_LIBDIR /usr/local/openresty/openssl111/lib \
    && luarocks config variables.OPENSSL_INCDIR /usr/local/openresty/openssl111/include

ARG checkout_v
ARG iteration
ARG apisix_repo
RUN set -x \
    && mkdir -p /tmp/build/output/apisix/usr/bin/ \
    # get source code
    && git clone ${apisix_repo} \
    && cd apisix \
    && git checkout ${checkout_v} \
    # remove useless code for build
    && sed -i 's/url.*/url = ".\/apisix",/' rockspec/apisix-master-${iteration}.rockspec \
    && sed -i 's/branch.*//' rockspec/apisix-master-${iteration}.rockspec \
    # build the lib and specify the storage path of the package installed
    && luarocks make ./rockspec/apisix-master-${iteration}.rockspec --tree=/tmp/build/output/apisix/usr/local/apisix/deps --local \
    && chown -R $USER:$USER /tmp/build/output \
    && cd .. \
    # copy the compiled files to the package install directory
    && cp /tmp/build/output/apisix/usr/local/apisix/deps/lib64/luarocks/rocks-5.1/apisix/master-${iteration}/bin/apisix /tmp/build/output/apisix/usr/bin/ || true \
    && cp /tmp/build/output/apisix/usr/local/apisix/deps/lib/luarocks/rocks-5.1/apisix/master-${iteration}/bin/apisix /tmp/build/output/apisix/usr/bin/ || true \
    # modify the apisix entry shell to be compatible with version 2.2 and 2.3
    && (if [ "${checkout_v}" = "master" ] || [ "${checkout_v:0:1}" != "v" -a "${checkout_v}" \> "2.2" ] || [ "${checkout_v:0:1}" = "v" -a "${checkout_v:1}" \> "2.2" ]; then echo 'use shell ';else bin='#! /usr/local/openresty/luajit/bin/luajit\npackage.path = "/usr/local/apisix/?.lua;" .. package.path'; sed -i "1s@.*@$bin@" /tmp/build/output/apisix/usr/bin/apisix ; fi;) \
    && cp -r /usr/local/apisix/* /tmp/build/output/apisix/usr/local/apisix/ \
    && mv /tmp/build/output/apisix/usr/local/apisix/deps/share/lua/5.1/apisix /tmp/build/output/apisix/usr/local/apisix/ \
    && (if [ "${checkout_v}" = "master" ] || [ "${checkout_v:0:1}" != "v" -a "${checkout_v}" \> "2.2" ] || [ "${checkout_v:0:1}" = "v" -a "${checkout_v:1}" \> "2.2" ]; then bin='package.path = "/usr/local/apisix/?.lua;" .. package.path'; sed -i "1s@.*@$bin@" /tmp/build/output/apisix/usr/local/apisix/apisix/cli/apisix.lua ; else echo ''; fi;) \
    # delete unnecessary files
    && rm -rf /tmp/build/output/apisix/usr/local/apisix/deps/lib64/luarocks \
    && rm -rf /tmp/build/output/apisix/usr/local/apisix/deps/lib/luarocks/rocks-5.1/apisix/master-${iteration}/doc
