name: Build and Publish Package

on:
  create

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  publish_apisix:
    name: Build and Publish RPM Package
    runs-on: ubuntu-18.04
    timeout-minutes: 60

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.5
        with:
          submodules: recursive

      - name: Extract Tags name
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: tag_env
        shell: bash
        run: |
          echo "##[set-output name=version;]$(echo ${GITHUB_REF##*/})"

      - name: Extract Tags Type
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: tag_type
        shell: bash
        run: |
          echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/tags/})"

      - name: Build apisix RPM Package
        if: ${{ startsWith(steps.tag_type.outputs.version, 'apisix/') }}
        env:
          APISIX_TAG_VERSION: ${{ steps.tag_env.outputs.version}}
        run: |
          # build apisix
          make package type=rpm app=apisix openresty=apisix-base checkout=${APISIX_TAG_VERSION} version=${APISIX_TAG_VERSION} image_base=centos image_tag=7
          mv ./output/apisix-${APISIX_TAG_VERSION}-0.el7.x86_64.rpm ./
          echo "TARGET_APP=apisix" >> "$GITHUB_ENV"

      - name: Build apisix-base RPM Package
        if: ${{ startsWith(steps.tag_type.outputs.version, 'apisix-base/') }}
        env:
          APISIX_BASE_TAG_VERSION: ${{ steps.tag_env.outputs.version}}
        run: |
          # build apisix-base
          echo ${{ steps.tag_env.outputs.version}}
          echo ${{ steps.tag_type.outputs.version}}
          make package type=rpm app=apisix-base checkout=${APISIX_BASE_TAG_VERSION} version=${APISIX_BASE_TAG_VERSION} image_base=centos image_tag=7
          mv ./output/apisix-base-${APISIX_BASE_TAG_VERSION}-0.el7.x86_64.rpm ./
          echo "TARGET_APP=apisix-base" >> "$GITHUB_ENV"

      - name: Build apisix-dashboard RPM Package
        if: ${{ startsWith(steps.tag_type.outputs.version, 'dashboard/') }}
        env:
          APISIX_DASHBOARD_TAG_VERSION: ${{ steps.tag_env.outputs.version}}
        run: |
          # build apisix dashboard
          make package type=rpm app=dashboard checkout=${APISIX_DASHBOARD_TAG_VERSION} version=${APISIX_DASHBOARD_TAG_VERSION} image_base=centos image_tag=7
          mv ./output/apisix-dashboard-${APISIX_DASHBOARD_TAG_VERSION}-0.el7.x86_64.rpm ./
          echo "TARGET_APP=apisix-dashboard" >> "$GITHUB_ENV"

      - name: Upload apisix Artifact
        if: ${{ startsWith(steps.tag_type.outputs.version, 'apisix/') }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "apisix-${{ steps.tag_env.outputs.version}}-0.el7.x86_64.rpm"
          path: "./apisix-${{ steps.tag_env.outputs.version}}-0.el7.x86_64.rpm"

      - name: Upload apisix-base Artifact
        if: ${{ startsWith(steps.tag_type.outputs.version, 'apisix-base/') }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "apisix-base-${{ steps.tag_env.outputs.version}}-0.el7.x86_64.rpm"
          path: "./apisix-base-${{ steps.tag_env.outputs.version}}-0.el7.x86_64.rpm"

      - name: Upload apisix-dashboard Artifact
        if: ${{ startsWith(steps.tag_type.outputs.version, 'dashboard/') }}
        uses: actions/upload-artifact@v2.2.3
        with:
          name: "apisix-dashboard-${{ steps.tag_env.outputs.version}}-0.el7.x86_64.rpm"
          path: "./apisix-dashboard-${{ steps.tag_env.outputs.version}}-0.el7.x86_64.rpm"

      - name: Sign RPM Package
        env:
          GPG_NAME: "APISIX Publisher"
          GPG_MAIL: "<dev@apisix.apache.org>"
          TAG_VERSION: ${{ steps.tag_env.outputs.version }}
          TARGET_APP: ${{ env.TARGET_APP }}
        run: |
          echo "${{ secrets.RPM_GPG_PRIV_KEY }}" >> /tmp/rpm-gpg-publish.private
          echo "${{ secrets.RPM_GPG_PASSPHRASE }}" >> /tmp/rpm-gpg-publish.passphrase
          ./utils/publish-rpm.sh sign_target_app_rpm
          date_tag=$(date +%Y%m%d)
          echo "DATE_TAG=${date_tag}" >> "$GITHUB_ENV"

      - name: Backup and rebuild RPM Repository
        env:
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          ACCESS_KEY_SECRET: ${{ secrets.ACCESS_KEY_SECRET }}
          TAG_VERSION: ${{ steps.tag_env.outputs.version }}
          TARGET_APP: ${{ env.TARGET_APP }}
          DATE_TAG: ${{ env.DATE_TAG }}
        run: |
          ./utils/publish-rpm.sh backup_and_rebuild_repo

      - name: Sign RPM Repository Metadata
        env:
          TAG_VERSION: ${{ steps.tag_env.outputs.version }}
        run: |
          ./utils/publish-rpm.sh sign_repo_metadata

      - name: Upload new RPM Repository
        run: |
          ./utils/publish-rpm.sh upload_new_repo

      - name: Check download new RPM Package
        env:
          TAG_VERSION: ${{ steps.tag_env.outputs.version }}
          TARGET_APP: ${{ env.TARGET_APP }}
        run: |
          ./utils/publish-rpm.sh check_down_load_rpm

      - name: Remove backup RPM Repository
        env:
          DATE_TAG: ${{ env.DATE_TAG }}
        run: |
          ./utils/publish-rpm.sh rm_backup_repo
